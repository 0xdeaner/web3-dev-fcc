{
  "address": "0x8B18A166Af15Ba05fdB7162eC9Eb74BDF2820A37",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x954f7599dda21f7ea4b283284020c23a8066540035f81a06cc55bd87f943e439",
  "receipt": {
    "to": null,
    "from": "0xfCACe1B7eB08395ab26dc26B0e3e56d58D65e5B7",
    "contractAddress": "0x8B18A166Af15Ba05fdB7162eC9Eb74BDF2820A37",
    "transactionIndex": 15,
    "gasUsed": "894318",
    "logsBloom": "0x
    "blockHash": "0x553db8b2e04dd5b3793fb149baf104b9cb226b4c45e2622100543c0e2350393e",
    "transactionHash": "0x954f7599dda21f7ea4b283284020c23a8066540035f81a06cc55bd87f943e439",
    "logs": [],
    "blockNumber": 11271601,
    "cumulativeGasUsed": "7699242",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
  ],
  "numDeployments": 1,
  "solcInputHash": "605df0ac8d311573bedc60134346a675",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n    AggregatorV3Interface public priceFeed;\\n\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address[] public funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public /* immutable */ i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n\\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert NotOwner();\\n        _;\\n    }\\n\\n    function withdraw() payable onlyOwner public {\\n        for (uint256 funderIndex = 0; funderIndex < funders.length; funderIndex++) {\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess,) = payable(msg.sender).call{value : address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    // Ether is sent to contract\\n    //      is msg.data empty?\\n    //          /   \\\\\\n    //         yes  no\\n    //         /     \\\\\\n    //    receive()?  fallback()\\n    //     /   \\\\\\n    //   yes   no\\n    //  /        \\\\\\n    //receive()  fallback()\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n}\",\"keccak256\":\"0xf88e4d4dd2edc19cd541ac5166a022d5130597c32cac1e94775bda973eb97099\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n//    // We could make this public, but then we'd have to deploy it\\n//    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n//        // Rinkeby ETH / USD Address\\n//        // https://docs.chain.link/docs/ethereum-addresses/\\n//        (, int256 answer, , ,) = priceFeed.latestRoundData();\\n//        // ETH/USD rate in 18 digit\\n//        return uint256(answer * 10000000000);\\n//    }\\n\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        (, int256 answer, , ,) = priceFeed.latestRoundData();\\n        uint256 ethPrice = uint256(answer * 10000000000);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        return ethAmountInUsd;\\n    }\\n}\",\"keccak256\":\"0x706a0c8daea0399c0dacfa6f7a249d2f91142799a7091436f3d7f5b808392af0\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610fbb380380610fbb8339818101604052810190610032919061011c565b33600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610149565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e9826100be565b9050919050565b6100f9816100de565b811461010457600080fd5b50565b600081519050610116816100f0565b92915050565b600060208284031215610132576101316100b9565b5b600061014084828501610107565b91505092915050565b610e63806101586000396000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a146100ff578063b60d42881461012a578063dba6335f14610134578063dc0d3dff1461015f57610083565b80633ccfd60b1461008d5780633e47d6f3146100975780636b69a592146100d457610083565b366100835761008161019c565b005b61008b61019c565b005b6100956102d5565b005b3480156100a357600080fd5b506100be60048036038101906100b9919061079b565b610518565b6040516100cb91906107e1565b60405180910390f35b3480156100e057600080fd5b506100e9610530565b6040516100f691906107e1565b60405180910390f35b34801561010b57600080fd5b5061011461053d565b604051610121919061085b565b60405180910390f35b61013261019c565b005b34801561014057600080fd5b50610149610561565b6040516101569190610885565b60405180910390f35b34801561016b57600080fd5b50610186600480360381019061018191906108cc565b610587565b6040516101939190610885565b60405180910390f35b6802b5e3af16b18800006101d960008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105c690919063ffffffff16565b101561021a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021190610956565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461026991906109a5565b925050819055506002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461035c576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60028054905081101561040857600060028281548110610382576103816109fb565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040090610a2a565b91505061035f565b50600067ffffffffffffffff81111561042457610423610a73565b5b6040519080825280602002602001820160405280156104525781602001602082028036833780820191505090505b5060029080519060200190610468929190610691565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161048f90610ad3565b60006040518083038185875af1925050503d80600081146104cc576040519150601f19603f3d011682016040523d82523d6000602084013e6104d1565b606091505b5050905080610515576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050c90610b34565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b6802b5e3af16b188000081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002818154811061059757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561060f57600080fd5b505afa158015610623573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106479190610be1565b50505091505060006402540be400826106609190610c5c565b90506000670de0b6b3a764000086836106799190610d73565b6106839190610dfc565b905080935050505092915050565b82805482825590600052602060002090810192821561070a579160200282015b828111156107095782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106b1565b5b509050610717919061071b565b5090565b5b8082111561073457600081600090555060010161071c565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107688261073d565b9050919050565b6107788161075d565b811461078357600080fd5b50565b6000813590506107958161076f565b92915050565b6000602082840312156107b1576107b0610738565b5b60006107bf84828501610786565b91505092915050565b6000819050919050565b6107db816107c8565b82525050565b60006020820190506107f660008301846107d2565b92915050565b6000819050919050565b600061082161081c6108178461073d565b6107fc565b61073d565b9050919050565b600061083382610806565b9050919050565b600061084582610828565b9050919050565b6108558161083a565b82525050565b6000602082019050610870600083018461084c565b92915050565b61087f8161075d565b82525050565b600060208201905061089a6000830184610876565b92915050565b6108a9816107c8565b81146108b457600080fd5b50565b6000813590506108c6816108a0565b92915050565b6000602082840312156108e2576108e1610738565b5b60006108f0848285016108b7565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610940601b836108f9565b915061094b8261090a565b602082019050919050565b6000602082019050818103600083015261096f81610933565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109b0826107c8565b91506109bb836107c8565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156109f0576109ef610976565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a35826107c8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a6857610a67610976565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610abd600083610aa2565b9150610ac882610aad565b600082019050919050565b6000610ade82610ab0565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b1e600b836108f9565b9150610b2982610ae8565b602082019050919050565b60006020820190508181036000830152610b4d81610b11565b9050919050565b600069ffffffffffffffffffff82169050919050565b610b7381610b54565b8114610b7e57600080fd5b50565b600081519050610b9081610b6a565b92915050565b6000819050919050565b610ba981610b96565b8114610bb457600080fd5b50565b600081519050610bc681610ba0565b92915050565b600081519050610bdb816108a0565b92915050565b600080600080600060a08688031215610bfd57610bfc610738565b5b6000610c0b88828901610b81565b9550506020610c1c88828901610bb7565b9450506040610c2d88828901610bcc565b9350506060610c3e88828901610bcc565b9250506080610c4f88828901610b81565b9150509295509295909350565b6000610c6782610b96565b9150610c7283610b96565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610cb157610cb0610976565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610cee57610ced610976565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d2b57610d2a610976565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610d6857610d67610976565b5b828202905092915050565b6000610d7e826107c8565b9150610d89836107c8565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610dc257610dc1610976565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e07826107c8565b9150610e12836107c8565b925082610e2257610e21610dcd565b5b82820490509291505056fea2646970667358221220287df6da91de2a076852af1230cbe6d4a188163201fe12352270e22cf287518664736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a146100ff578063b60d42881461012a578063dba6335f14610134578063dc0d3dff1461015f57610083565b80633ccfd60b1461008d5780633e47d6f3146100975780636b69a592146100d457610083565b366100835761008161019c565b005b61008b61019c565b005b6100956102d5565b005b3480156100a357600080fd5b506100be60048036038101906100b9919061079b565b610518565b6040516100cb91906107e1565b60405180910390f35b3480156100e057600080fd5b506100e9610530565b6040516100f691906107e1565b60405180910390f35b34801561010b57600080fd5b5061011461053d565b604051610121919061085b565b60405180910390f35b61013261019c565b005b34801561014057600080fd5b50610149610561565b6040516101569190610885565b60405180910390f35b34801561016b57600080fd5b50610186600480360381019061018191906108cc565b610587565b6040516101939190610885565b60405180910390f35b6802b5e3af16b18800006101d960008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105c690919063ffffffff16565b101561021a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021190610956565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461026991906109a5565b925050819055506002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461035c576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60028054905081101561040857600060028281548110610382576103816109fb565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040090610a2a565b91505061035f565b50600067ffffffffffffffff81111561042457610423610a73565b5b6040519080825280602002602001820160405280156104525781602001602082028036833780820191505090505b5060029080519060200190610468929190610691565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161048f90610ad3565b60006040518083038185875af1925050503d80600081146104cc576040519150601f19603f3d011682016040523d82523d6000602084013e6104d1565b606091505b5050905080610515576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050c90610b34565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b6802b5e3af16b188000081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002818154811061059757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561060f57600080fd5b505afa158015610623573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106479190610be1565b50505091505060006402540be400826106609190610c5c565b90506000670de0b6b3a764000086836106799190610d73565b6106839190610dfc565b905080935050505092915050565b82805482825590600052602060002090810192821561070a579160200282015b828111156107095782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106b1565b5b509050610717919061071b565b5090565b5b8082111561073457600081600090555060010161071c565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107688261073d565b9050919050565b6107788161075d565b811461078357600080fd5b50565b6000813590506107958161076f565b92915050565b6000602082840312156107b1576107b0610738565b5b60006107bf84828501610786565b91505092915050565b6000819050919050565b6107db816107c8565b82525050565b60006020820190506107f660008301846107d2565b92915050565b6000819050919050565b600061082161081c6108178461073d565b6107fc565b61073d565b9050919050565b600061083382610806565b9050919050565b600061084582610828565b9050919050565b6108558161083a565b82525050565b6000602082019050610870600083018461084c565b92915050565b61087f8161075d565b82525050565b600060208201905061089a6000830184610876565b92915050565b6108a9816107c8565b81146108b457600080fd5b50565b6000813590506108c6816108a0565b92915050565b6000602082840312156108e2576108e1610738565b5b60006108f0848285016108b7565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610940601b836108f9565b915061094b8261090a565b602082019050919050565b6000602082019050818103600083015261096f81610933565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109b0826107c8565b91506109bb836107c8565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156109f0576109ef610976565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a35826107c8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a6857610a67610976565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610abd600083610aa2565b9150610ac882610aad565b600082019050919050565b6000610ade82610ab0565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b1e600b836108f9565b9150610b2982610ae8565b602082019050919050565b60006020820190508181036000830152610b4d81610b11565b9050919050565b600069ffffffffffffffffffff82169050919050565b610b7381610b54565b8114610b7e57600080fd5b50565b600081519050610b9081610b6a565b92915050565b6000819050919050565b610ba981610b96565b8114610bb457600080fd5b50565b600081519050610bc681610ba0565b92915050565b600081519050610bdb816108a0565b92915050565b600080600080600060a08688031215610bfd57610bfc610738565b5b6000610c0b88828901610b81565b9550506020610c1c88828901610bb7565b9450506040610c2d88828901610bcc565b9350506060610c3e88828901610bcc565b9250506080610c4f88828901610b81565b9150509295509295909350565b6000610c6782610b96565b9150610c7283610b96565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610cb157610cb0610976565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610cee57610ced610976565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d2b57610d2a610976565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610d6857610d67610976565b5b828202905092915050565b6000610d7e826107c8565b9150610d89836107c8565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610dc257610dc1610976565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e07826107c8565b9150610e12836107c8565b925082610e2257610e21610dcd565b5b82820490509291505056fea2646970667358221220287df6da91de2a076852af1230cbe6d4a188163201fe12352270e22cf287518664736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 57,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 64,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}