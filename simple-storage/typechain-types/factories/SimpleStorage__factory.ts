/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SimpleStorage, SimpleStorageInterface } from "../SimpleStorage";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_favoriteNumber",
        type: "uint256",
      },
    ],
    name: "addPerson",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "nameToFavoriteNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "people",
    outputs: [
      {
        internalType: "uint256",
        name: "favoriteNumber",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "retrieve",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_favoriteNumber",
        type: "uint256",
      },
    ],
    name: "store",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610959806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80632e64cec11461005c5780636057361d1461007a5780636f760f41146100965780638bab8dd5146100b25780639e7a13ad146100e2575b600080fd5b610064610113565b6040516100719190610544565b60405180910390f35b610094600480360381019061008f919061059f565b6101a1565b005b6100b060048036038101906100ab9190610712565b61022f565b005b6100cc60048036038101906100c7919061076e565b61039b565b6040516100d99190610544565b60405180910390f35b6100fc60048036038101906100f7919061059f565b6103c9565b60405161010a92919061083f565b60405180910390f35b60006101417f09aee495f9c3858bfe354aa889c7244c0328812793882741c6e5125aad87dc3e60001b610485565b61016d7f049aa34fc2cb0412160db14813c03d17a73c499983f21e975f07356f2ec1879960001b610485565b6101997fa7af44e30e725264b1478225015bd534b51a08c3853e245a88ba46c4c3ab074160001b610485565b600054905090565b6101cd7f2727c5017b9c9076955a8c44488232fdf25dbcc3f788565b86d05216293dbcc860001b610485565b6101f97f4524950bd1a87c5b71edec14b9f2afec2ab274ea5593b9fa2e89cc5b6d7f681260001b610485565b6102257f991a5fc3a31398ac28b4f38c5cf0e1cdf3f73da43d7670740caa8365e4293ab860001b610485565b8060008190555050565b61025b7ff6efcea23f0ec00fcb7ac3e4f4e5d46d2d1f1dd3874a5e2c9e210d355abbc76560001b610485565b6102877f6cbc81585b1fabfebacde0ce50ede2579af8fc6705cc018797711f88fa3bcb2d60001b610485565b6102b37f46c12e6cad570b5d2b578b81c7dd896ae8847fb62511bc7bd0916d8a5e91f9a260001b610485565b60016040518060400160405280838152602001848152509080600181540180825580915050600190039060005260206000209060020201600090919091909150600082015181600001556020820151816001019080519060200190610319929190610488565b5050506103487fe5796724916a2fdc9a0fda38c71d5755e704e80c8f6e2d49155c91ca63814fd760001b610485565b6103747fc4a581c48db0931c97739abc69b86dc67fb65a2e4ba11a57e7a39b0fbee7596860001b610485565b8060028360405161038591906108ab565b9081526020016040518091039020819055505050565b6002818051602081018201805184825260208301602085012081835280955050505050506000915090505481565b600181815481106103d957600080fd5b9060005260206000209060020201600091509050806000015490806001018054610402906108f1565b80601f016020809104026020016040519081016040528092919081815260200182805461042e906108f1565b801561047b5780601f106104505761010080835404028352916020019161047b565b820191906000526020600020905b81548152906001019060200180831161045e57829003601f168201915b5050505050905082565b50565b828054610494906108f1565b90600052602060002090601f0160209004810192826104b657600085556104fd565b82601f106104cf57805160ff19168380011785556104fd565b828001600101855582156104fd579182015b828111156104fc5782518255916020019190600101906104e1565b5b50905061050a919061050e565b5090565b5b8082111561052757600081600090555060010161050f565b5090565b6000819050919050565b61053e8161052b565b82525050565b60006020820190506105596000830184610535565b92915050565b6000604051905090565b600080fd5b600080fd5b61057c8161052b565b811461058757600080fd5b50565b60008135905061059981610573565b92915050565b6000602082840312156105b5576105b4610569565b5b60006105c38482850161058a565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61061f826105d6565b810181811067ffffffffffffffff8211171561063e5761063d6105e7565b5b80604052505050565b600061065161055f565b905061065d8282610616565b919050565b600067ffffffffffffffff82111561067d5761067c6105e7565b5b610686826105d6565b9050602081019050919050565b82818337600083830152505050565b60006106b56106b084610662565b610647565b9050828152602081018484840111156106d1576106d06105d1565b5b6106dc848285610693565b509392505050565b600082601f8301126106f9576106f86105cc565b5b81356107098482602086016106a2565b91505092915050565b6000806040838503121561072957610728610569565b5b600083013567ffffffffffffffff8111156107475761074661056e565b5b610753858286016106e4565b92505060206107648582860161058a565b9150509250929050565b60006020828403121561078457610783610569565b5b600082013567ffffffffffffffff8111156107a2576107a161056e565b5b6107ae848285016106e4565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156107f15780820151818401526020810190506107d6565b83811115610800576000848401525b50505050565b6000610811826107b7565b61081b81856107c2565b935061082b8185602086016107d3565b610834816105d6565b840191505092915050565b60006040820190506108546000830185610535565b81810360208301526108668184610806565b90509392505050565b600081905092915050565b6000610885826107b7565b61088f818561086f565b935061089f8185602086016107d3565b80840191505092915050565b60006108b7828461087a565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061090957607f821691505b6020821081141561091d5761091c6108c2565b5b5091905056fea264697066735822122005c7eec8ed2acd4fbe0ee9e76eb718ce4657b9f32c26ca4c2c7487ac3a7aea2464736f6c63430008080033";

type SimpleStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleStorage__factory extends ContractFactory {
  constructor(...args: SimpleStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "SimpleStorage";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SimpleStorage> {
    return super.deploy(overrides || {}) as Promise<SimpleStorage>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SimpleStorage {
    return super.attach(address) as SimpleStorage;
  }
  connect(signer: Signer): SimpleStorage__factory {
    return super.connect(signer) as SimpleStorage__factory;
  }
  static readonly contractName: "SimpleStorage";
  public readonly contractName: "SimpleStorage";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleStorageInterface {
    return new utils.Interface(_abi) as SimpleStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleStorage {
    return new Contract(address, _abi, signerOrProvider) as SimpleStorage;
  }
}
